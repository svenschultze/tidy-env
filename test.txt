[INFO]: ðŸŽ¯  Checking for the Wasm target...
[INFO]: ðŸŒ€  Compiling to Wasm...
   Compiling core v0.1.0 (/mnt/c/Users/SvenSchultze/Documents/tidy-env/crates/core)
warning: unused imports: `MultiLineString` and `area::Area`
 --> crates/core/src/gen.rs:5:9
  |
5 |         area::Area, bounding_rect::BoundingRect, euclidean_length::EuclideanLength,
  |         ^^^^^^^^^^
...
8 |     BooleanOps, Coord, LineString, MultiLineString, Polygon,
  |                                    ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `geo::MultiPolygon`
  --> crates/core/src/gen.rs:10:5
   |
10 | use geo::MultiPolygon; // Need this for the return type of intersection/difference
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `geo::Geometry`
  --> crates/core/src/gen.rs:43:9
   |
43 |     use geo::Geometry;
   |         ^^^^^^^^^^^^^

warning: unnecessary parentheses around function argument
  --> crates/core/src/gen.rs:46:9
   |
46 |         (Coord { x: 0.0, y: 0.0 }),
   |         ^                        ^
   |
   = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
   |
46 -         (Coord { x: 0.0, y: 0.0 }),
46 +         Coord { x: 0.0, y: 0.0 },
   |

warning: unnecessary parentheses around function argument
  --> crates/core/src/gen.rs:47:9
   |
47 |         (Coord {
   |         ^
...
50 |         }),
   |          ^
   |
help: remove these parentheses
   |
47 ~         Coord {
48 |             x: WIDTH,
49 |             y: DEPTH,
50 ~         },
   |

warning: unnecessary parentheses around function argument
  --> crates/core/src/gen.rs:62:17
   |
62 |                 (Coord { x: x0, y: 0.0 }),
   |                 ^                       ^
   |
help: remove these parentheses
   |
62 -                 (Coord { x: x0, y: 0.0 }),
62 +                 Coord { x: x0, y: 0.0 },
   |

warning: unnecessary parentheses around function argument
  --> crates/core/src/gen.rs:63:17
   |
63 |                 (Coord {
   |                 ^
...
66 |                 }),
   |                  ^
   |
help: remove these parentheses
   |
63 ~                 Coord {
64 |                     x: x0 + notch_w,
65 |                     y: notch_h,
66 ~                 },
   |

warning: unnecessary parentheses around function argument
  --> crates/core/src/gen.rs:73:17
   |
73 |                 (Coord {
   |                 ^
...
76 |                 }),
   |                  ^
   |
help: remove these parentheses
   |
73 ~                 Coord {
74 |                     x: WIDTH - notch_w,
75 |                     y: y0,
76 ~                 },
   |

warning: unnecessary parentheses around function argument
  --> crates/core/src/gen.rs:77:17
   |
77 |                 (Coord {
   |                 ^
...
80 |                 }),
   |                  ^
   |
help: remove these parentheses
   |
77 ~                 Coord {
78 |                     x: WIDTH,
79 |                     y: y0 + notch_h,
80 ~                 },
   |

warning: unnecessary parentheses around function argument
  --> crates/core/src/gen.rs:87:17
   |
87 |                 (Coord {
   |                 ^
...
90 |                 }),
   |                  ^
   |
help: remove these parentheses
   |
87 ~                 Coord {
88 |                     x: x0,
89 |                     y: DEPTH - notch_h,
90 ~                 },
   |

warning: unnecessary parentheses around function argument
  --> crates/core/src/gen.rs:91:17
   |
91 |                 (Coord {
   |                 ^
...
94 |                 }),
   |                  ^
   |
help: remove these parentheses
   |
91 ~                 Coord {
92 |                     x: x0 + notch_w,
93 |                     y: DEPTH,
94 ~                 },
   |

warning: unnecessary parentheses around function argument
   --> crates/core/src/gen.rs:101:17
    |
101 |                 (Coord { x: 0.0, y: y0 }),
    |                 ^                       ^
    |
help: remove these parentheses
    |
101 -                 (Coord { x: 0.0, y: y0 }),
101 +                 Coord { x: 0.0, y: y0 },
    |

warning: unnecessary parentheses around function argument
   --> crates/core/src/gen.rs:102:17
    |
102 |                 (Coord {
    |                 ^
...
105 |                 }),
    |                  ^
    |
help: remove these parentheses
    |
102 ~                 Coord {
103 |                     x: notch_w,
104 |                     y: y0 + notch_h,
105 ~                 },
    |

error[E0308]: mismatched types
   --> crates/core/src/gen.rs:113:9
    |
112 |     match result {
    |           ------ this expression has type `geo::MultiPolygon`
113 |         geo::Geometry::Polygon(p) => p,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MultiPolygon`, found `Geometry<_>`
    |
    = note: expected struct `geo::MultiPolygon`
                 found enum `Geometry<_>`

error[E0308]: mismatched types
   --> crates/core/src/gen.rs:114:9
    |
112 |     match result {
    |           ------ this expression has type `geo::MultiPolygon`
113 |         geo::Geometry::Polygon(p) => p,
114 |         geo::Geometry::MultiPolygon(mp) => mp.into_iter().next().unwrap(),
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MultiPolygon`, found `Geometry<_>`
    |
    = note: expected struct `geo::MultiPolygon`
                 found enum `Geometry<_>`

error[E0599]: no method named `area` found for reference `&geo::Polygon` in the current scope
   --> crates/core/src/gen.rs:133:32
    |
133 |             .max_by(|a, b| a.1.area().partial_cmp(&b.1.area()).unwrap())
    |                                ^^^^ method not found in `&Polygon`

error[E0599]: no method named `area` found for reference `&geo::Polygon` in the current scope
   --> crates/core/src/gen.rs:133:56
    |
133 |             .max_by(|a, b| a.1.area().partial_cmp(&b.1.area()).unwrap())
    |                                                        ^^^^ method not found in `&Polygon`

error[E0277]: the trait bound `(_, _, _, _): From<geo::Rect>` is not satisfied
   --> crates/core/src/gen.rs:137:70
    |
137 |         let (minx, miny, maxx, maxy) = room.bounding_rect().unwrap().into();
    |                                                                      ^^^^ the trait `From<geo::Rect>` is not implemented for `(_, _, _, _)`
    |
    = help: the following other types implement trait `From<T>`:
              `(T, T)` implements `From<Coord<T>>`
              `(T, T)` implements `From<[T; 2]>`
              `(T, T)` implements `From<geo::Point<T>>`
              `(T, T, T)` implements `From<[T; 3]>`
              `(T, T, T, T)` implements `From<[T; 4]>`
              `(T, T, T, T, T)` implements `From<[T; 5]>`
              `(T, T, T, T, T, T)` implements `From<[T; 6]>`
              `(T, T, T, T, T, T, T)` implements `From<[T; 7]>`
            and 6 others
    = note: required for `geo::Rect` to implement `Into<(_, _, _, _)>`
help: consider removing this method call, as the receiver has type `std::option::Option<geo::Rect>` and `std::option::Option<geo::Rect>: From<geo::Rect>` trivially holds
    |
137 -         let (minx, miny, maxx, maxy) = room.bounding_rect().unwrap().into();
137 +         let (minx, miny, maxx, maxy) = room.bounding_rect().into();
    |

error[E0599]: no method named `intersection` found for struct `geo::LineString` in the current scope
   --> crates/core/src/gen.rs:150:14
    |
146 | /             LineString::from(vec![
147 | |                 Coord { x, y: miny - 1.0 },
148 | |                 Coord { x, y: maxy + 1.0 },
149 | |             ])
150 | |             .intersection(&room)
    | |_____________-^^^^^^^^^^^^
    |
help: there is a method `intersects` with a similar name
    |
150 -             .intersection(&room)
150 +             .intersects(&room)
    |

error[E0599]: no method named `intersection` found for struct `geo::LineString` in the current scope
   --> crates/core/src/gen.rs:158:14
    |
154 | /             LineString::from(vec![
155 | |                 Coord { x: minx - 1.0, y },
156 | |                 Coord { x: maxx + 1.0, y },
157 | |             ])
158 | |             .intersection(&room)
    | |_____________-^^^^^^^^^^^^
    |
help: there is a method `intersects` with a similar name
    |
158 -             .intersection(&room)
158 +             .intersects(&room)
    |

error[E0425]: cannot find function `split` in this scope
   --> crates/core/src/gen.rs:178:31
    |
178 |                 .flat_map(|p| split(p, &s))
    |                               ^^^^^ not found in this scope

error[E0599]: no method named `area` found for reference `&geo::Polygon` in the current scope
   --> crates/core/src/gen.rs:183:15
    |
183 |             p.area() >= MIN_ROOM_A
    |               ^^^^ method not found in `&Polygon`

error[E0599]: no method named `buffer` found for reference `&geo::Polygon` in the current scope
   --> crates/core/src/gen.rs:184:23
    |
184 |                 && !p.buffer(-MIN_THICK).is_empty()
    |                       ^^^^^^ method not found in `&Polygon`

error[E0599]: no method named `boundary` found for reference `&geo::Polygon` in the current scope
   --> crates/core/src/gen.rs:208:28
    |
208 |             let inter = r1.boundary().intersection(&r2.boundary());
    |                            ^^^^^^^^ method not found in `&Polygon`

error[E0599]: no method named `boundary` found for reference `&geo::Polygon` in the current scope
   --> crates/core/src/gen.rs:208:56
    |
208 |             let inter = r1.boundary().intersection(&r2.boundary());
    |                                                        ^^^^^^^^ method not found in `&Polygon`

error[E0599]: no method named `coords_iter` found for reference `&geo::LineString` in the current scope
   --> crates/core/src/gen.rs:274:27
    |
274 |     let start_coord = seg.coords_iter().next().unwrap();
    |                           ^^^^^^^^^^^
    |
    = help: items from traits can only be used if the trait is in scope
help: trait `CoordsIter` which provides `coords_iter` is implemented but not in scope; perhaps you want to import it
    |
3   + use geo::CoordsIter;
    |
help: there is a method `coords` with a similar name
    |
274 -     let start_coord = seg.coords_iter().next().unwrap();
274 +     let start_coord = seg.coords().next().unwrap();
    |

error[E0599]: no method named `coords_iter` found for reference `&geo::LineString` in the current scope
   --> crates/core/src/gen.rs:275:25
    |
275 |     let end_coord = seg.coords_iter().last().unwrap();
    |                         ^^^^^^^^^^^
    |
    = help: items from traits can only be used if the trait is in scope
help: trait `CoordsIter` which provides `coords_iter` is implemented but not in scope; perhaps you want to import it
    |
3   + use geo::CoordsIter;
    |
help: there is a method `coords` with a similar name
    |
275 -     let end_coord = seg.coords_iter().last().unwrap();
275 +     let end_coord = seg.coords().last().unwrap();
    |

error[E0599]: no method named `coords_iter` found for reference `&geo::LineString` in the current scope
   --> crates/core/src/gen.rs:366:14
    |
364 |           let coords: Vec<Vec2> = poly
    |  _________________________________-
365 | |             .exterior()
366 | |             .coords_iter()
    | |_____________-^^^^^^^^^^^
    |
    = help: items from traits can only be used if the trait is in scope
help: trait `CoordsIter` which provides `coords_iter` is implemented but not in scope; perhaps you want to import it
    |
3   + use geo::CoordsIter;
    |
help: there is a method `coords` with a similar name
    |
366 -             .coords_iter()
366 +             .coords()
    |

error[E0599]: no method named `coords_iter` found for struct `geo::LineString` in the current scope
   --> crates/core/src/gen.rs:384:34
    |
384 |             let pts: Vec<_> = ls.coords_iter().collect();
    |                                  ^^^^^^^^^^^
    |
   ::: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/geo-0.24.1/src/algorithm/coords_iter.rs:35:8
    |
35  |     fn coords_iter(&'a self) -> Self::Iter;
    |        ----------- the method is available for `geo::LineString` here
    |
    = help: items from traits can only be used if the trait is in scope
help: trait `CoordsIter` which provides `coords_iter` is implemented but not in scope; perhaps you want to import it
    |
3   + use geo::CoordsIter;
    |
help: there is a method `coords` with a similar name
    |
384 -             let pts: Vec<_> = ls.coords_iter().collect();
384 +             let pts: Vec<_> = ls.coords().collect();
    |

Some errors have detailed explanations: E0277, E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0277`.
warning: `core` (lib) generated 13 warnings
error: could not compile `core` (lib) due to 16 previous errors; 13 warnings emitted
Error: Compiling your crate to WebAssembly failed
Caused by: Compiling your crate to WebAssembly failed
Caused by: failed to execute `cargo build`: exited with exit status: 101
  full command: cd "crates/wasm" && "cargo" "build" "--lib" "--release" "--target" "wasm32-unknown-unknown"
